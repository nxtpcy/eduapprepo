<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.slhj.www.edu.dao.StudentUserMapper">
	<resultMap id="BaseResultMap" type="com.slhj.www.edu.pojo.StudentUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="stu_id" property="stuId" jdbcType="VARCHAR" />
		<result column="stu_name" property="stuName" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="inst_id" property="instId" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="RegisterDTO" extends="BaseResultMap"
		type="com.slhj.www.edu.pojo.dto.RegisterDTO">
	</resultMap>

	<resultMap id="BaseResultMapDTO" type="com.slhj.www.edu.pojo.dto.StudentUserDTO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="stu_id" property="stuId" jdbcType="VARCHAR" />
		<result column="stu_name" property="stuName" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="inst_id" property="instId" jdbcType="VARCHAR" />
	</resultMap>


	<sql id="Base_Column_List">
		id, stu_id, stu_name, age, inst_id, password
	</sql>

	<sql id="Base_Column_List_DTO">
		id, stu_id, stu_name, age, inst_id
	</sql>

	<select id="query" parameterType="com.slhj.www.edu.common.QueryBase"
		resultMap="BaseResultMapDTO">
		select
		<include refid="Base_Column_List_DTO" />
		from student
		<where>
			<if test="parameters.stuName != null">
				stu_name like
				CONCAT(CONCAT('%',#{parameters.stuName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="parameters.stuId != null">
				and stu_id like
				CONCAT(CONCAT('%',#{parameters.stuId,jdbcType=VARCHAR}),'%')
			</if>
		</where>
		<if test="firstRow != null and pageSize != null">
			limit #{firstRow},#{pageSize}
		</if>
	</select>

	<select id="queryRows" parameterType="com.slhj.www.edu.common.QueryBase"
		resultType="Long">
		select count(*) from student
		<where>
			<if test="parameters.stuName != null">
				stu_name like
				CONCAT(CONCAT('%',#{parameters.stuName,jdbcType=VARCHAR}),'%')
			</if>
			<if test="parameters.stuId != null">
				and stu_id like
				CONCAT(CONCAT('%',#{parameters.stuId,jdbcType=VARCHAR}),'%')
			</if>
		</where>
	</select>


	<select id="getStudentUserDTOByStuId" parameterType="String"
		resultMap="BaseResultMapDTO">
		select
		<include refid="Base_Column_List_DTO" />
		from student
		where stu_id=#{stuId,jdbcType=VARCHAR}
	</select>


	<select id="getStudentUserByStuId" parameterType="String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from student
		where stu_id=#{stuId,jdbcType=VARCHAR}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMapDTO"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from student
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		student
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteUserByStuId" parameterType="String">
		delete from
		student
		where stu_id = #{stuId,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.slhj.www.edu.pojo.StudentUser">
		insert into student (id,
		stu_id, stu_name,
		age, inst_id, password
		)
		values
		(#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR},
		#{stuName,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{instId,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.slhj.www.edu.pojo.dto.RegisterDTO">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="stuId != null">
				stu_id,
			</if>
			<if test="stuName != null">
				stu_name,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="instId != null">
				inst_id,
			</if>
			<if test="password != null">
				password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="stuId != null">
				#{stuId,jdbcType=VARCHAR},
			</if>
			<if test="stuName != null">
				#{stuName,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="instId != null">
				#{instId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<!-- 需要修改，应该使用StudentUserDTO -->
	<update id="updateByPrimaryKeySelective" parameterType="com.slhj.www.edu.pojo.StudentUser">
		update student
		<set>
			<if test="stuId != null">
				stu_id = #{stuId,jdbcType=VARCHAR},
			</if>
			<if test="stuName != null">
				stu_name = #{stuName,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="instId != null">
				inst_id = #{instId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	
	<update id="updateByStuIdSelective" parameterType="com.slhj.www.edu.pojo.dto.StudentUserDTO">
		update student
		<set>
			<if test="stuId != null">
				stu_id = #{stuId,jdbcType=VARCHAR},
			</if>
			<if test="stuName != null">
				stu_name = #{stuName,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="instId != null">
				inst_id = #{instId,jdbcType=VARCHAR},
			</if>
		</set>
		where stu_id = #{stuId,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateByPrimaryKey" parameterType="com.slhj.www.edu.pojo.StudentUser">
		update student
		set
		stu_id = #{stuId,jdbcType=VARCHAR},
		stu_name =
		#{stuName,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		inst_id =
		#{instId,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>